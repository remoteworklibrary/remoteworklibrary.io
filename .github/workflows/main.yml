name: CI

on: push

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: europe-west3
  PROJECT_BASE_URL: https://remote-work-library-j62hawuk6q-ey.a.run.app/
  DOCKER_GAR_NAME: remote-work-library-docker
  SERVICE_NAME: remote-work-library

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup composed environment variables
        run: |
          echo "DOCKER_IMAGE_PATH=${RUN_REGION}-docker.pkg.dev/${PROJECT_ID}/${DOCKER_GAR_NAME}/${SERVICE_NAME}:${GITHUB_SHA}"  >> $GITHUB_ENV
          echo "DOCKER_REGISTRY_BASE_URL=${RUN_REGION}-docker.pkg.dev" >> $GITHUB_ENV

      - name: Setup hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.80.0"

      - name: Build
        run: hugo -s . --config ./config.toml --minify
      - name: Deploy
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          #keep_files: true
          user_name: adersberger
          user_email: josef.adersberger@qaware.de
          cname: www.remoteworklibrary.io

      - name: Audit URLs using Lighthouse
        if: github.ref == 'refs/heads/master'
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://www.remoteworklibrary.io/
            https://www.remoteworklibrary.io/posts/tools-online-retros/
          #budgetPath: ./budget.json # test performance budgets
          #uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.RUN_SA_KEY }}
        
      - name: setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2.1.1
        with:
          version: "488.0.0"
          project_id: ${{ secrets.RUN_PROJECT }}

      # Configure docker to use the gcloud command-line tool as a credential helper  
      - run: gcloud auth configure-docker $DOCKER_REGISTRY_BASE_URL
      
      # Build the Docker image for staging environment
      - name: Build
        run: docker build --build-arg BASE_URL=$PROJECT_BASE_URL --tag $DOCKER_IMAGE_PATH . 
        
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: docker push $DOCKER_IMAGE_PATH
        
      # Deploy the Docker image to Google Cloud Run
      - name: Deploy
        run: gcloud components install beta && gcloud beta run deploy $SERVICE_NAME --quiet --image $DOCKER_IMAGE_PATH --project $PROJECT_ID --region $RUN_REGION --platform managed --allow-unauthenticated
