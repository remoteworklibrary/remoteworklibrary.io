name: CI

on: push

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: europe-west4
  SERVICE_NAME: remoteworklibrary

jobs:
  deploy-prod:
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.80.0"

      - name: Build
        run: hugo -s . --config ./config.toml --minify
      - name: Deploy
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.TOKEN }}
          external_repository: remoteworklibrary/remoteworklibrary.github.io
          publish_dir: ./public
          #keep_files: true
          user_name: adersberger
          user_email: josef.adersberger@qaware.de
          publish_branch: master
          cname: www.remoteworklibrary.io

      - name: Audit URLs using Lighthouse
        if: github.ref == 'refs/heads/master'
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            https://www.remoteworklibrary.io/
            https://www.remoteworklibrary.io/posts/tools-online-retros/
          #budgetPath: ./budget.json # test performance budgets
          #uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

      # Setup gcloud CLI
      - name: setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      # Configure docker to use the gcloud command-line tool as a credential helper  
      - run: gcloud auth configure-docker
      
      # Build the Docker image for staging environment
      - name: Build
        run: docker build --build-arg BASE_URL=https://remoteworklibrary-zkop4aqvwa-ez.a.run.app/ --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA . 
        
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        
      # Deploy the Docker image to Google Cloud Run
      - name: Deploy
        run: gcloud components install beta && gcloud beta run deploy $SERVICE_NAME --quiet --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA --project $PROJECT_ID --region $RUN_REGION --platform managed --allow-unauthenticated
